Jenkins
  Jenkins ID: admin
  Jenkins Pass: admin
  Start: sudo systemctl start jenkins 
  Stop: sudo systemctl stop jenkins 
  Restart: sudo systemctl restart jenkins 
  Status: sudo systemctl status jenkins
   

Open SSH
  SSH Start: sudo service ssh start
  SSH Status: sudo service ssh status


Tomcat
  start: goto /opt/tomcat/bin run ./startup.sh
  stop: goto /opt/tomcat/bin run ./shutdown.sh
  quick start: tomcatup
  quick stop: tomcatdown


Docker
  Help: docker --help
  Start: service docker start
  Status: service docker status
  Images: docker images
  All cotainers: docker ps -a
  Running cotainers: docker ps
  delete all container: docker container prune
  delete all images: docker image prune -a
  New Container: docker run -d --name tomcat-container -p 8081:8080 tomcat  
    (8081: external and 8080 internal)
  Login Container: docker exec -u 0 -it e6bd007953c7 /bin/sh
  How to create docker container (video 20)
    We need a docker image to create a docker container
    pull image from dockerhub (hub.docker.com)
      docker pull tomcat
    404 error solution (video 21)
      docker exec -it tomcat-container /bin/bash
      $ cd webapps.dist
      $ cp -R * ../webapps

Firewall
  firewall-cmd --list-ports
  firewall-cmd --add-port 22/tcp


Maven
  install loc: /opt/maven
  workspace loc: /var/lib/jenkins/workspace/
  war loc: /var/lib/jenkins/workspace/<Job_Name>/<Project_Name>/target


Steps to install/setup Jenkins
  setup linux server
    use ubuntu server in virtual box
  install java
    sudo apt-get install openjdk-11-jdk
  install jenkins
    wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key |sudo gpg --dearmor -o /usr/share/keyrings/jenkins.gpg
    sudo sh -c 'echo deb [signed-by=/usr/share/keyrings/jenkins.gpg] http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
    sudo apt update
    sudo apt install jenkins
  start jenkins
    sudo systemctl start jenkins
  access web ui on port 8080
    localhost:8080
    <public ip>:8080
    password loc: /var/lib/jenkins/secrets/initialAdminPassword
  integrate git in jenkins
    install:  manage jenkins > manage plugins > github
    setup: manage jenkins > global tool configuration > Git
      Name: Git
      Path: git
    add Job
  integrate maven in jenkins
    setup maven on jenkins server
      goolge "download maven" > goto official link > copy link for "Binary tar.gz archive"
      $ cd /opt
      $ sudo wget <link>
      $ sudo tar -xvzf <package>
      $ mv <package> maven
    setup enviroment variable
      # cd ~
      # nano .bashrc and add these lines at bottom
        M2_HOME=/opt/maven
        M2=/opt/maven/bin
        JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64 <OR jdk name>
        PATH=$PATH:$HOME/bin:$JAVA_HOME:$M2_HOME:$M2
        export PATH
      run these to confirm
        # source .bashrc
        # echo $PATH
    install maven plugin
      install: manage jenkins > manage plugins > maven integration
    configure maven and java
      manage jenkins > global tool configuration >
        Add JDK 
          Name: java-11
          JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
        Add Maven
          Name: maven-3.8.6
          MAVEN_HOME: /opt/maven
  

Steps to setup Tomcat Server
  reference link: https://github.com/yankils/Simple-DevOps-Project/blob/master/Tomcat/tomcat_installation.MD
  setup linux server
    use ubuntu server in virtual box
  install java
    $ sudo apt-get install openjdk-11-jdk
    $ cd /opt
    google "download tomcat" > goto official tomcat 9 > copy link for "tar.gz"
    $ wget <link>
    $ tar -xvzf <package>
    $ mv <extracted package> tomcat
  configure Tomcat
    comment <Value classname="...RemoteAddrValue"... in these 2 files
      $ nano /opt/tomcat/webapps/host-manager/META-INF/context.xml
      $ nano /opt/tomcat/webapps/manager//META-INF/context.xml
    start tomcat server (quick start setup)
      ln -s /opt/tomcat/bin/startup.sh /usr/local/bin/tomcatup
      ln -s /opt/tomcat/bin/shutdown.sh /usr/local/bin/tomcatdown
    add users
      open $ nano /opt/tomcat/conf/tomcat-users.xml
      add users from the reference page i.e.
        <role rolename="manager-gui"/>
        <role rolename="manager-script"/>
        <role rolename="manager-jmx"/>
        <role rolename="manager-status"/>
        <user username="admin" password="admin" roles="manager-gui, manager-script, manager-jmx, manager-status"/>
        <user username="deployer" password="deployer" roles="manager-script"/>
        <user username="tomcat" password="s3cret" roles="manager-gui"/>
  access Web UI on port 8080
    localhost:8080
    <public ip>:8080
  integrate tomcat in jenkins
    install: manage jenkins > manage plugins > "deploy to container"
    configure tomcat server with credentials
      manage jenkins > manage credentials > jenkins > global credentials > add credentials
        kind: username with password
        scope: global
        username: deployer
        password: deployer
        id: tomcat_deployer
        desc: tomcat_deployer
      dashboard > new item > name "BuildAndDeployJob" with maven project > setup this project (16th video)
        add git repo url
        goals and options: clean install
        Post-build Action: Deploy war/ear to a container
          WAR/EAR files: **/*.war
          Context path: leave it blank
          Add Container: Tomcat 8.x Remote
            credentials: deployer
            Tomcat URL: <public_ip>:8080


Setup auto build and Deploy
  Dashboard > BuildAndDeployJob > configure > Build Triggers
    Select Poll SCM and add schedule * * * * *  (5 starts with spaces)


Steps to install/setup Docker
  setup linux server
    use ubuntu server in virtual box
  install docker
    sudo apt update
    sudo apt install apt-transport-https ca-certificates curl software-properties-common
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
    sudo apt update
    apt-cache policy docker-ce
    sudo apt install docker-ce
    docker --version
    sudo systemctl status docker
  start docker server
    service docker start


Integrate docker with jenkins
  create a dockeradmin user
    useradd dockeradmin
    passwd dockeradmin
    usermod -aG docker dockeradmin
    usermod -aG sudo dockeradmin
    # visudo
      root    ALL=(ALL:ALL) ALL
      dockeradmin ALL=(ALL:ALL) ALL
    sudo mkdir /home/me
    sudo usermod --shell /bin/bash --home /home/me me
    sudo chown -R me:me /home/me
    cp /etc/skel/.* /home/me/
  install "Publish Over SSH" plugin
    nano /etc/ssh/sshd_config
    check passwordauthentication is yes or no
    service sshd reload
  Add dockerhost to jenkins "configure system"
    search plugin: "publish over ssh"
    config system > publish over SSH > Add SSH
      name: dockerserver
      hostname: 192.168.1.13 
      username: dockeradmin
  make clone of BuildAndDeployJob project 
    In config setting delete post-build action and add new SSH Server
    name: dockerserver
    source files: webapp/target/*.war
    remote prefix: webapp/target
    remote directory:
    save


Connect SSH PuTTy
  install OpenSSH
  install net tools
    sudo apt install net-tools
  view public ip
    ifconfig


Write docker file 
  Commands
    FROM: To pull the base image
    RUN: To execute commands
    CMD: To provide defaults for an existing container (can be overwritten)
    ENTRYPOINT: To configure a container that will run as an executable
    WORKDIR: To set the working directory
    COPY: To copy a directory from your local machine to the docker container
    ADD: To copy files and folders from your local machine to docker containers
    EXPOSE: Informs docker that the container listing on the specified network ports at runtime
    ENV: To set enviroment variables
  Install tomcat on CentOS
    Pull centos from dockerhub - FROM
    install java - RUN
    Create /opt/tomcat directory - RUN
    Change work directory to /opt/tomcat - WORKDIR
    Download tomcat packages - ADD/RUN
    Extract tar.gz file - RUN
    Rename to tomcat directory - RUN
    Tell to docker that it runs on port 8080 - EXPOSE
    start tomcat services - CMD
  Dockerfile
    FROM centos
    RUN cd /etc/yum.repos.d/
    RUN sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
    RUN sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
    RUN yum -y install java
    RUN mkdir /opt/tomcat
    WORKDIR /opt/tomcat
    ADD https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.65/bin/apache-tomcat-9.0.65.tar.gz .
    RUN tar -xvzf apache-tomcat-9.0.65.tar.gz
    RUN mv apache-tomcat-9.0.65/* /opt/tomcat
    EXPOSE 8080
    CMD ["/opt/tomcat/bin/catalina.sh","run"]
  Build
    docker build -t mytomcat .
  